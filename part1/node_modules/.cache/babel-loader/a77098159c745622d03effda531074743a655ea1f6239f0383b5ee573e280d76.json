{"ast":null,"code":"var _jsxFileName = \"/Users/maxmynter/Desktop/fullstackOpen/fullstackOpen/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log('Array Element: ', props), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_c = Header;\nconst Part = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.name, \" \", props.exercises]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c2 = Part;\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(props), props.parts.forEach(part => {\n      /*#__PURE__*/_jsxDEV(Part, {\n        part: part\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Content;\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Total;\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  };\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  };\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  };\n  const parts = [part1, part2, part3];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      exercises: parts.map(part => part.exercises).reduce((acc, val) => acc + val, 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["Header","props","console","log","course","Part","name","exercises","Content","parts","forEach","part","Total","App","part1","part2","part3","map","reduce","acc","val"],"sources":["/Users/maxmynter/Desktop/fullstackOpen/fullstackOpen/part1/src/App.js"],"sourcesContent":["const Header = (props) =>{\n\n  return(\n      <>\n      {console.log('Array Element: ', props)}\n         <h1>{props.course}</h1> \n      </>\n  )\n\n}\n\nconst Part = (props) =>  (\n  <p>\n    {props.name} {props.exercises}\n  </p>\n)\n\nconst Content = (props) => {\n  return (\n    <div>\n      {console.log(props)}\n      {props.parts.forEach(part => {\n        <Part part={part}/>\n      })}\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <p>\n      Number of exercises {props.exercises}\n    </p>\n  )\n}\n\nconst App = () => {\n  const course = 'Half Stack application development'\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  }\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  }\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  }\n\n  const parts = [part1, part2, part3]\n\n  return (\n    <div>\n      <Header course={course}/>\n      <Content parts={parts} />\n      <Total exercises={parts.map(part=>part.exercises).reduce((acc, val)=> acc+val, 0)} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,MAAMA,MAAM,GAAIC,KAAK,IAAI;EAEvB,oBACI;IAAA,WACCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC,eACnC;MAAA,UAAKA,KAAK,CAACG;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBACvB;AAGT,CAAC;AAAA,KATKJ,MAAM;AAWZ,MAAMK,IAAI,GAAIJ,KAAK,iBACjB;EAAA,WACGA,KAAK,CAACK,IAAI,OAAGL,KAAK,CAACM,SAAS;AAAA;EAAA;EAAA;EAAA;AAAA,QAEhC;AAAA,MAJKF,IAAI;AAMV,MAAMG,OAAO,GAAIP,KAAK,IAAK;EACzB,oBACE;IAAA,WACGC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,EAClBA,KAAK,CAACQ,KAAK,CAACC,OAAO,CAACC,IAAI,IAAI;MAC3B,qBAAC,IAAI;QAAC,IAAI,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IACrB,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,MATKH,OAAO;AAWb,MAAMI,KAAK,GAAIX,KAAK,IAAK;EACvB,oBACE;IAAA,mCACuBA,KAAK,CAACM,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAER,CAAC;AAAA,MANKK,KAAK;AAQX,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMT,MAAM,GAAG,oCAAoC;EACnD,MAAMU,KAAK,GAAG;IACZR,IAAI,EAAE,uBAAuB;IAC7BC,SAAS,EAAE;EACb,CAAC;EACD,MAAMQ,KAAK,GAAG;IACZT,IAAI,EAAE,0BAA0B;IAChCC,SAAS,EAAE;EACb,CAAC;EACD,MAAMS,KAAK,GAAG;IACZV,IAAI,EAAE,sBAAsB;IAC5BC,SAAS,EAAE;EACb,CAAC;EAED,MAAME,KAAK,GAAG,CAACK,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC;EAEnC,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,MAAM,EAAEZ;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACzB,QAAC,OAAO;MAAC,KAAK,EAAEK;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACzB,QAAC,KAAK;MAAC,SAAS,EAAEA,KAAK,CAACQ,GAAG,CAACN,IAAI,IAAEA,IAAI,CAACJ,SAAS,CAAC,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAID,GAAG,GAACC,GAAG,EAAE,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACjF;AAEV,CAAC;AAAA,MAxBKP,GAAG;AA0BT,eAAeA,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}