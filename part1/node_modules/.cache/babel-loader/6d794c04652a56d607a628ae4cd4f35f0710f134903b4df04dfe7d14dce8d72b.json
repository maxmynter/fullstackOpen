{"ast":null,"code":"var _jsxFileName = \"/Users/maxmynter/Desktop/fullstackOpen/fullstackOpen/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Header;\nconst Part = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.part.name, \" \", props.part.exercises]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c2 = Part;\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Content;\nconst Total = props => {\n  const nExercises = props.parts.map(part => part.exercises).reduce((acc, val) => acc + val, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", nExercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_c4 = Total;\nconst App = () => {\n  const course = {\n    name: \"Half Stack application development\",\n    parts: [{\n      name: \"Fundamentals of React\",\n      exercises: 10\n    }, {\n      name: \"Using props to pass data\",\n      exercises: 7\n    }, {\n      name: \"State of a component\",\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["Header","props","course","Part","part","name","exercises","Content","parts","map","Total","nExercises","reduce","acc","val","App"],"sources":["/Users/maxmynter/Desktop/fullstackOpen/fullstackOpen/part1/src/App.js"],"sourcesContent":["const Header = (props) => {\n  return (\n    <>\n      <h1>{props.course}</h1>\n    </>\n  );\n};\n\nconst Part = (props) => (\n  <p>\n    {props.part.name} {props.part.exercises}\n  </p>\n);\n\nconst Content = (props) => {\n  return (\n    <div>\n      {props.parts.map((part) => (\n        <Part key={part.name} part={part} />\n      ))}\n    </div>\n  );\n};\n\nconst Total = (props) => {\n  const nExercises = props.parts\n    .map((part) => part.exercises)\n    .reduce((acc, val) => acc + val, 0);\n  return <p>Number of exercises {nExercises}</p>;\n};\n\nconst App = () => {\n  const course = {\n    name: \"Half Stack application development\",\n    parts: [\n      {\n        name: \"Fundamentals of React\",\n        exercises: 10,\n      },\n      {\n        name: \"Using props to pass data\",\n        exercises: 7,\n      },\n      {\n        name: \"State of a component\",\n        exercises: 14,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Header course={course.name} />\n      <Content parts={course.parts} />\n      <Total parts={course.parts} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,MAAMA,MAAM,GAAIC,KAAK,IAAK;EACxB,oBACE;IAAA,uBACE;MAAA,UAAKA,KAAK,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA;EAAM,iBACtB;AAEP,CAAC;AAAC,KANIF,MAAM;AAQZ,MAAMG,IAAI,GAAIF,KAAK,iBACjB;EAAA,WACGA,KAAK,CAACG,IAAI,CAACC,IAAI,OAAGJ,KAAK,CAACG,IAAI,CAACE,SAAS;AAAA;EAAA;EAAA;EAAA;AAAA,QAE1C;AAAC,MAJIH,IAAI;AAMV,MAAMI,OAAO,GAAIN,KAAK,IAAK;EACzB,oBACE;IAAA,UACGA,KAAK,CAACO,KAAK,CAACC,GAAG,CAAEL,IAAI,iBACpB,QAAC,IAAI;MAAiB,IAAI,EAAEA;IAAK,GAAtBA,IAAI,CAACC,IAAI;MAAA;MAAA;MAAA;IAAA,QACrB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,MARIE,OAAO;AAUb,MAAMG,KAAK,GAAIT,KAAK,IAAK;EACvB,MAAMU,UAAU,GAAGV,KAAK,CAACO,KAAK,CAC3BC,GAAG,CAAEL,IAAI,IAAKA,IAAI,CAACE,SAAS,CAAC,CAC7BM,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC;EACrC,oBAAO;IAAA,mCAAwBH,UAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AAChD,CAAC;AAAC,MALID,KAAK;AAOX,MAAMK,GAAG,GAAG,MAAM;EAChB,MAAMb,MAAM,GAAG;IACbG,IAAI,EAAE,oCAAoC;IAC1CG,KAAK,EAAE,CACL;MACEH,IAAI,EAAE,uBAAuB;MAC7BC,SAAS,EAAE;IACb,CAAC,EACD;MACED,IAAI,EAAE,0BAA0B;MAChCC,SAAS,EAAE;IACb,CAAC,EACD;MACED,IAAI,EAAE,sBAAsB;MAC5BC,SAAS,EAAE;IACb,CAAC;EAEL,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,MAAM,EAAEJ,MAAM,CAACG;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/B,QAAC,OAAO;MAAC,KAAK,EAAEH,MAAM,CAACM;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC,QAAC,KAAK;MAAC,KAAK,EAAEN,MAAM,CAACM;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1B;AAEV,CAAC;AAAC,MA1BIO,GAAG;AA4BT,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}