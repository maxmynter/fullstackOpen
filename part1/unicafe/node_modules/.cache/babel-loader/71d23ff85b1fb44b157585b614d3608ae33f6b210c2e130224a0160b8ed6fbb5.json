{"ast":null,"code":"var _jsxFileName = \"/Users/maxmynter/Desktop/fullstackOpen/fullstackOpen/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n_c = Header;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Button;\nconst StatsDisplay = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.stats.map(stat => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [stat.text, \": \", stat.stat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c3 = StatsDisplay;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let stats = [{\n    text: \"Good\",\n    stat: good\n  }, {\n    text: \"Neutral\",\n    stat: neutral\n  }, {\n    text: \"Bad\",\n    stat: bad\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Good\",\n      onClick: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatsDisplay, {\n      stats: stats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatsDisplay\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Header","text","Button","props","StatsDisplay","stats","map","stat","App","good","setGood","neutral","setNeutral","bad","setBad"],"sources":["/Users/maxmynter/Desktop/fullstackOpen/fullstackOpen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Header = ({ text }) => {\n  return <h1>{text}</h1>;\n};\n\nconst Button = (props) => {\n  return <button>{props.text}</button>;\n};\n\nconst StatsDisplay = (props) => {\n  return (\n    <>\n      {props.stats.map((stat) => (\n        <p>\n          {stat.text}: {stat.stat}\n        </p>\n      ))}\n    </>\n  );\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  let stats = [\n    { text: \"Good\", stat: good },\n    { text: \"Neutral\", stat: neutral },\n    { text: \"Bad\", stat: bad },\n  ];\n\n  return (\n    <div>\n      <Header text=\"Give Feedback\" />\n      <Button text=\"Good\" onClick={() => setGood(good + 1)} />\n      <Button text=\"Neutral\" />\n      <Button text=\"Bad\" />\n      <Header text=\"Statistics\" />\n      <StatsDisplay stats={stats} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,MAAM,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACtB,oBAAO;IAAA,UAAKA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAM;AACxB,CAAC;AAAC,KAFID,MAAM;AAIZ,MAAME,MAAM,GAAIC,KAAK,IAAK;EACxB,oBAAO;IAAA,UAASA,KAAK,CAACF;EAAI;IAAA;IAAA;IAAA;EAAA,QAAU;AACtC,CAAC;AAAC,MAFIC,MAAM;AAIZ,MAAME,YAAY,GAAID,KAAK,IAAK;EAC9B,oBACE;IAAA,UACGA,KAAK,CAACE,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACpB;MAAA,WACGA,IAAI,CAACN,IAAI,QAAIM,IAAI,CAACA,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAE1B;EAAC,iBACD;AAEP,CAAC;AAAC,MAVIH,YAAY;AAYlB,MAAMI,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEjC,IAAIM,KAAK,GAAG,CACV;IAAEJ,IAAI,EAAE,MAAM;IAAEM,IAAI,EAAEE;EAAK,CAAC,EAC5B;IAAER,IAAI,EAAE,SAAS;IAAEM,IAAI,EAAEI;EAAQ,CAAC,EAClC;IAAEV,IAAI,EAAE,KAAK;IAAEM,IAAI,EAAEM;EAAI,CAAC,CAC3B;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,IAAI,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/B,QAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,OAAO,EAAE,MAAMH,OAAO,CAACD,IAAI,GAAG,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACxD,QAAC,MAAM;MAAC,IAAI,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACzB,QAAC,MAAM;MAAC,IAAI,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,MAAM;MAAC,IAAI,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5B,QAAC,YAAY;MAAC,KAAK,EAAEJ;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1B;AAEV,CAAC;AAAC,GAtBIG,GAAG;AAAA,MAAHA,GAAG;AAwBT,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}